#+TITLE: functionfoundry docs

_function foundry_ is a JavaScript library written in ES6.

It includes ES5 code precompiled with babel in the lib folder.

If you want to load the entire library (72kb) then use functionfoundry.js in the dist folder. This file is generated with webpack.

The library includes functions for:

  + [[#abs][ABS]]
  + [[#acos][ACOS]]
  + [[#add][ADD]]
  + [[#and][AND]]
  + [[#bin2dec][BIN2DEC]]
  + [[#cell][CELL]]
  + [[#cellindex][CELLINDEX]]
  + [[#changed][CHANGED]]
  + [[#choose][CHOOSE]]
  + [[#clean][CLEAN]]
  + [[#concatenate][CONCATENATE]]
  + [[#cond][COND]]
  + [[#cos][COS]]
  + [[#date][DATE]]
  + [[#datedif][DATEDIF]]
  + [[#dec2bin][DEC2BIN]]
  + [[#diff][DIFF]]
  + [[#divide][DIVIDE]]
  + [[#eq][EQ]]
  + [[#filter][FILTER]]
  + [[#find][FIND]]
  + [[#flatten][FLATTEN]]
  + [[#gt][GT]]
  + [[#gte][GTE]]
  + [[#guid][GUID]]
  + [[#hlookup][HLOOKUP]]
  + [[#ifna][IFNA]]
  + [[#in][IN]]
  + [[#index2col][INDEX2COL]]
  + [[#index2row][INDEX2ROW]]
  + [[#indirect][INDIRECT]]
  + [[#isarray][ISARRAY]]
  + [[#isblank][ISBLANK]]
  + [[#isemail][ISEMAIL]]
  + [[#iserror][ISERROR]]
  + [[#iseven][ISEVEN]]
  + [[#isfunction][ISFUNCTION]]
  + [[#isna][ISNA]]
  + [[#isnumber][ISNUMBER]]
  + [[#isodd][ISODD]]
  + [[#isrange][ISRANGE]]
  + [[#isref][ISREF]]
  + [[#istext][ISTEXT]]
  + [[#isurl][ISURL]]
  + [[#lookup][LOOKUP]]
  + [[#lower][LOWER]]
  + [[#lt][LT]]
  + [[#lte][LTE]]
  + [[#max][MAX]]
  + [[#multiply][MULTIPLY]]
  + [[#n][N]]
  + [[#ne][NE]]
  + [[#not][NOT]]
  + [[#oct2dec][OCT2DEC]]
  + [[#or][OR]]
  + [[#pi][PI]]
  + [[#pmt][PMT]]
  + [[#power][POWER]]
  + [[#range][RANGE]]
  + [[#rept][REPT]]
  + [[#search][SEARCH]]
  + [[#sin][SIN]]
  + [[#sort][SORT]]
  + [[#sum][SUM]]
  + [[#switch][SWITCH]]
  + [[#tan][TAN]]
  + [[#tau][TAU]]
  + [[#text][TEXT]]
  + [[#unique][UNIQUE]]
  + [[#upper][UPPER]]
  + [[#vlookup][VLOOKUP]]

* ABS

Return the absolute value.

* ACOS

Return the trigometric value _acos_ of some value.

* ADD

Add one or more values with the JavaScript `+` operator.

* BIN2DEC

Convert a binary number to a decimal number.

* CELL

Returns an object that tracks a cell index and provides helper functions for:

1. getColumn() -> computes column
2. getRow() -> computes row
3. topLeft() -> return index supplied as input


* CELLINDEX

Returns a cell index given a row and column.

* CHANGED

Returns a list of fields that have changed between two JS objects.

#+BEGIN_SRC js
  let a = { a: 1, b: 2 },
      b = { a: 2, b: 2 },
      changed = CHANGED(a,b) // => ['a]
#+END_SRC

* CHOOSE

Choose a value from a range based on an index.

#+BEGIN_SRC js
  CHOOSE( 1, 'a', 'b', 'c' ) // => 'a'
  CHOOSE( 2, 'a', 'b', 'c' ) // => 'b'
  CHOOSE( 3, 'a', 'b', 'c' ) // => 'c'
#+END_SRC

* CLEAN

Return a new object that eliminates blank keys.

#+BEGIN_SRC js
  CLEAN({ a: null, b: undefined, c: 'some value' }) // => { c: 'some value' }
#+END_SRC

* CONCATENATE

Combine two strings.

* COND

Evaluate a condition table. The even value after the first true value is returned.

#+BEGIN_SRC js
  COND( true, 1, true, 2) // => 1
  COND( false, 1, true, 2) // => 2
#+END_SRC

* COS

Return the trigometric value _acos_ of some value.
